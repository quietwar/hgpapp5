<!DOCTYPE html>
<html>
  <head>
    <title>HGP Apps</title>
    <%= csrf_meta_tags %>

    <%= stylesheet_link_tag "application", :media => "all" %>
    <%= javascript_include_tag 'application' %>
    <%= stylesheet_link_tag "application-print", :media => "print" %>

    <meta name="google-signin-client_id" content='1006347326565-e30jdl53gig8s97mss8c606o0db865qu.apps.googleusercontent.com'>
    <div class="g-signin2" data-onsuccess="onSignIn"></div>
    <script src="https://smartlock.google.com/client"></script>
    <script>
    window.onGoogleYoloLoad = (googleyolo) => {
      // The 'googleyolo' object is ready for use.
    };
    retrievePromise.then((credential) => {
  if (credential.password) {
    // An ID (usually email address) and password credential was retrieved.
    // Sign in to your backend using the password.
    signInWithEmailAndPassword(credential.id, credential.password);
  } else {
    // A Google Account is retrieved. Since Google supports ID token responses,
    // you can use the token to sign in instead of initiating the Google sign-in
    // flow.
    useGoogleIdTokenForAuth(credential.idToken);
  }
}, (error) => {
  // Credentials could not be retrieved. In general, if the user does not
  // need to be signed in to use the page, you can just fail silently; or,
  // you can also examine the error object to handle specific error cases.

  // If retrieval failed because there were no credentials available, and
  // signing in might be useful or is required to proceed from this page,
  // you can call `hint()` to prompt the user to select an account to sign
  // in or sign up with.
  if (error.type === 'noCredentialsAvailable') {
    googleyolo.hint(...).then(...);
  }
});
disableAutoSignIn().then(() => {
  // Auto sign-in disabled.
});</script>
    <script src="//apis.google.com/js/platform.js" async defer>
         function onSignIn(googleUser) {
             var profile = googleUser.getBasicProfile();
             console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
             console.log('Name: ' + profile.getName());
             console.log('Image URL: ' + profile.getImageUrl());
             console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
           }
    </script>

           <a href="#" onclick="signOut();">Sign out</a>
           <script>
             function signOut() {
               var auth2 = gapi.auth2.getAuthInstance();
               auth2.signOut().then(function () {
                 console.log('User signed out.');
               });
             }
      </script>



       <!-- Custom Fonts -->


         <link href="//fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css">
         <link href="//fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">

     <!-- Custom Css -->
       	<link href="//blackrockdigital.github.io/startbootstrap-grayscale/css/grayscale.min.css" rel="stylesheet">
     <!-- Maps -->
         <script src="//maps.google.com/maps/api/js?v=3key=AIzaSyAMB_XQbw9cggEXdYrtnA3EVD7fzCr5rXQ"></script>
         <script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
         <script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script>

    </head>
    <body>

       <div>
       <%= yield %>
       </div>


      <%= render 'shared/header' %>

      <%= render 'shared/main' %>

      <%= render 'shared/footer' %>

    </div>
  </body>
</html>
